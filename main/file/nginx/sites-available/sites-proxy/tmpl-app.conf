
    limit_req_zone  $binary_remote_addr  zone=one:10m   rate=50r/s;
    limit_req zone=one burst=100;

    # proxy_cache_path /cache/ levels=1:2 keys_zone=my-key:8m max_size=50m inactive=120m;
    # proxy_temp_path /cache/tmp;

    server {

       listen         80;
       server_name    **;
       return         301 https://$server_name$request_uri;

    }


    server {
        listen 443 ssl;
        root /app/web/public;

            # Enable Gzip compressed.
      gzip on;

      # Enable compression both for HTTP/1.0 and HTTP/1.1.
      gzip_http_version  1.1;

      # Compression level (1-9).
      # 5 is a perfect compromise between size and cpu usage, offering about
      # 75% reduction for most ascii files (almost identical to level 9).
      gzip_comp_level    9;

      # Don't compress anything that's already small and unlikely to shrink much
      # if at all (the default is 20 bytes, which is bad as that usually leads to
      # larger files after gzipping).
      gzip_min_length    256;

      # Compress data even for clients that are connecting to us via proxies,
      # identified by the "Via" header (required for CloudFront).
      gzip_proxied       any;

      # Tell proxies to cache both the gzipped and regular version of a resource
      # whenever the client's Accept-Encoding capabilities header varies;
      # Avoids the issue where a non-gzip capable client (which is extremely rare
      # today) would display gibberish if their proxy gave them the gzipped version.
      gzip_vary          on;

      # Compress all output labeled with one of the following MIME-types.
      gzip_types
        application/atom+xml
        application/javascript
        application/json
        application/rss+xml
        application/vnd.ms-fontobject
        application/x-font-ttf
        application/x-web-app-manifest+json
        application/xhtml+xml
        application/xml
        font/opentype
        image/svg+xml
        image/x-icon
        image/bmp
        image/jpg
        image/png
        image/gif
        text/css
        text/plain
        text/x-component;


        server_name  www.horita-works.com;
        ssl                  on;
        ssl_certificate      /etc/nginx/ssl/www.horita-works.com/cert.pem;
        ssl_certificate_key  /etc/nginx/ssl/www.horita-works.com/privkey.pem;
        ssl_session_timeout  5m;
        ssl_protocols               TLSv1 TLSv1.1 TLSv1.2;
        ssl_ciphers  ALL:!ADH:!EXPORT56:RC4+RSA:+HIGH:+MEDIUM:+LOW:+SSLv2:+EXP;
        ssl_prefer_server_ciphers   on;
        ssl_session_cache shared:SSL:50m;
        ssl_session_tickets on;
        ssl_dhparam /etc/nginx/ssl/helmen.pem;


        add_header Strict-Transport-Security max-age=15768000;


        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Server $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Remote-Addr $remote_addr;


        index index.php index.html index.htm;
        sendfile off;
        error_log /var/log/nginx/error debug;
        access_log /var/log/nginx/access ltsv;


        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            # root /usr/share/nginx/html/adminer;
        }


             location / {


                      if ( -e /mt ) {
                      set $maintenance true;
                      }

                      if ( $allow_ip_flag ) {
                      set $maintenance false;
                      }

                      if ( $maintenance = true ) {
                      rewrite ^ /maintenance.html redirect;
                      }

                      location /maintenance.html {
                      alias /mt.html;
                      expires 0;
                      }

                      # proxy_ignore_headers Cache-Control;
                      # proxy_cache my-key;
                      # proxy_cache_valid 200 302 60m;
                      # proxy_cache_valid 404 10m;

                      proxy_pass http://backend;
                  }

      location /server-status {
                                stub_status on;
                                access_log off;
                                allow 127.0.0.1;
                                allow 192.168.1.31;
                                deny all;
                }

    location /.well-known/acme-challenge {
        root /var/www/letsencrypt;
    }




    location ~* \.(jpg|jpeg|gif|png|css|js|ico|xml)$ {
                add_header Cache-Control "public";
                access_log        off;
                log_not_found     off;
                expires           1w;
        }



    }




geo $allow_ip_flag {
    default 0;
    192.0.2.0/24 1;    #TEST-NET-1
    198.51.100.0/24 1; #TEST-NET-2
}


upstream backend {
    ip_hash;
    {{range service "main_app-80"}}
    server {{.Address}}:{{.Port}} weight=1;
    {{end}}
    }



